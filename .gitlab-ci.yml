# SPDX-FileCopyrightText: 2022 German Aerospace Center <amiris@dlr.de>
#
# SPDX-License-Identifier: CC0-1.0

stages:
  - test
  - deploy
  - publish

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line. `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache downloaded dependencies and plugins between builds.
cache:
  paths:
    - .m2/repository

# General Settings for jobs in stage "test"
.test:
  stage: test
  only:
    - merge_requests

# Include reuse-test to check if all files comply with the reuse software requirements: https://reuse.software/dev/
test:reuse:
  extends: .test
  image:
    name: fsfe/reuse:latest
    entrypoint: [""]
  cache: [] # do not use cached files here, as those will be assessed by the reuse linter
  script:
    - reuse lint

# Settings for unit tests & coverage analysis
.unittest:
  extends: .test
  script:
    - 'mvn $MAVEN_CLI_OPTS test'
    - "cat target/site/jacoco/index.html | grep -o 'Total[^%]*%' | grep -o '[0-9.,]* of [0-9.,]*' | sed 's/[,.]//g' | sed 's/ of / /g' | awk '{printf \"COVERAGE::%.2f\\n\", ((1.0 - ($1 / $2)) *100)}'"
  coverage: '/COVERAGE::\d+\.\d+/'

# Execute unit tests with JDK11
unittest:jdk11:
  extends: .unittest
  image: maven:3-eclipse-temurin-11

# Execute unit tests with JDK11
unittest:jdk17:
  extends: .unittest
  image: maven:3-eclipse-temurin-17

# Test javadoc building
test:javadoc:
  extends: .test
  image: maven:3-eclipse-temurin-11
  script:
    - 'mvn javadoc:javadoc'
    
# Ensure CHANGELOG.md was updated
test:changelog:
  extends: .test
  script:
    - git fetch
    - 'echo "Base is: $CI_MERGE_REQUEST_DIFF_BASE_SHA"'
    - CHANGELOG_CHANGED=$(git diff --name-only $CI_MERGE_REQUEST_DIFF_BASE_SHA...HEAD CHANGELOG.md)
    - 'if [[ "CHANGELOG.md" == $CHANGELOG_CHANGED ]]; then exit 0; else echo "No changes found in CHANGELOG.md compared to target branch."; exit 1; fi'

# General settings for stage "deploy", only run when merged to branch `main`
.deploy:
  stage: deploy
  only:
    - main

# Package AMIRIS & build javadoc
deploy:jdk11:
  extends: .deploy
  image: maven:3-eclipse-temurin-11
  script:
    - 'mvn $MAVEN_CLI_OPTS package'
    - 'mvn javadoc:javadoc'
  artifacts:
    paths:
      - target/*.jar
      - target/site/apidocs
    expire_in: 2 hrs

# General settings for stage "publish", only run when merged to branch `main`
.publish:
  stage: publish
  only:
    - main

# Publish javadoc to pages
pages:
  extends: .publish
  script:
    - mkdir .public
    - cp -r target/site/apidocs/* .public
    - mv .public public
  artifacts:
    paths:
      - public
